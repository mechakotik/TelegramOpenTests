package com.mechakotik.TelegramOpenTests;

import java.io.FileReader;
import java.util.Scanner;

public class MultiplyCrosswordBot extends OpenTestsBot {
    public MultiplyCrosswordBot() throws Exception {
        super();
    }

    @Override
    public String getBotUsername() {
        return null;
    }

    @Override
    public String getBotToken() {
        return null;
    }

    @Override
    public int getNumTests() {
        return 0;
    }

    @Override
    public String getStatementURL() {
        return null;
    }

    @Override
    public String getTestsURL() {
        return null;
    }

    static class CrosswordPart {
        int d, x, y, l, p;
    }

    @Override
    public CheckResult checkSolution(String outputPath, int testNumber) throws Exception {
        readInput(testNumber);
        if(!readOutput(outputPath)) {
            return new CheckResult("PE", 0);
        }
        if(!isSolutionCorrect()) {
            return new CheckResult("WA", 0);
        }
        return new CheckResult("OK", 0);
    }

    int n, m, k;
    CrosswordPart[] crossword;

    private void readInput(int testNumber) throws Exception {
        FileReader reader = new FileReader("data/multiply_crossword/input" + (testNumber + 1) + ".txt");
        Scanner scanner = new Scanner(reader);
        n = scanner.nextInt();
        m = scanner.nextInt();
        k = scanner.nextInt();
        crossword = new CrosswordPart[k];
        for(int i = 0; i < k; i ++) {
            crossword[i].d = scanner.nextInt();
            crossword[i].x = scanner.nextInt();
            crossword[i].y = scanner.nextInt();
            crossword[i].l = scanner.nextInt();
            crossword[i].p = scanner.nextInt();
        }
    }

    int[][] solution;

    private boolean readOutput(String outputPath) throws Exception {
        FileReader reader = new FileReader(outputPath);
        Scanner scanner = new Scanner(reader);
        solution = new int[n][m];
        for(int i = 0; i < n; i ++) {
            for(int j = 0; j < m; j ++) {
                if(!scanner.hasNextInt()) {
                    return false;
                }
                solution[i][j] = scanner.nextInt();
            }
        }
        return true;
    }

    private boolean isSolutionCorrect() {
        return true;
    }
}
